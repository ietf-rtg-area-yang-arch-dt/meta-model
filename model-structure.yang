module model-structure {

  yang-version "1";

  // namespace
  namespace "http://openconfig.net/yang/structure";

  prefix "struct";

  // import some basic types


  // meta
  organization "OpenConfig working group/IETF RTG YANG Design Team";

  contact
    "OpenConfig working group
    netopenconfig@googlegroups.com";

  description
    "This module describes a model structure for YANG
    configuration and operational state data models. It's intent is
    to describe how individual device protocol and feature models fit
    together and interact.";

  revision "2015-06-26" {
    description
      "First Pass of IETF Routing YANG Design Team";
    reference "TBD";
  }

  // extension statements

  // feature statements

  // identity statements

  // typedef statements

  // grouping statements

  grouping info {
    description
      "base system information";

    container info {
      description
        "This container is for base system information, including
        device type (e.g., physcal or virtual), model, serial no.,
        location, etc.";

      leaf device-type {
        //TODO: consider changing to an identity if finer grained
        // device type classification is envisioned
        type enumeration {
          enum PHYSICAL {
            description "physical or hardware device";
          }
          enum VIRTUAL {
            description "virtual or software device";
          }
        }
        description
          "Type of the device, e.g., physical or virtual.  This node
          may be used to activate other containers in the model";
      }

    }
  }

  grouping hardware {
    description
      "hardware / vendor -specific data relevant to the platform";

    container hardware {
      description
        "This container is an anchor point for platform-specific
        configuration and operational state data.  It may be further
        organized into chassis, linecards, ports, etc.  It is
        expected that vendor or platform-specific augmentations
        would be used to populate this part of the device model";
    }
  }

  identity networking-instance {
      description
         "Base identity from which identities describing
          networking instance types are derived.";
  }

  grouping router-id {
      description
          "This grouping provides router ID.";
      leaf router-id {
          type uint32;  // yang:dotted-quad
          description
            "A 32-bit number in the form of a dotted quad that is
             used by some routing protocols identifying a router.";
          reference
              "RFC 2328: OSPF Version 2.";
      }
  }
      
  grouping oam-protocols {
   description
      "Definitions for OAM protocols within a networking-instance";
    container bfd {
      description "Bi-directional Forwardind Detection (BFD)
                   configuration";

    }
    container cfm {
        description
            "Ethernet connectivity fault management.  Also includes
             options that are associated with specific interfaces,
             such as maintenance endpoint domains.";
        reference "IEEE 802.1ag";
      }
    container twamp {
        description
            "Two-way active measurement protocol for measuring
             round-trip IP layer performance.";
        reference "RFC 5357 A Two-Way Active Measurement Protocol
                   (TWAMP)";
    }
  }
  
  grouping l2-protocol-members {
    description "containers for each layer 2 protocol model";

    container vsi {
      description "virtual switch instance (or virtual forwarding
      instance) for use in PWE3 / VPLS services";

    }

    container ipv6-ndp {
      description "IPv6 neighbor discovery";
      reference "RFC 4861 - Neighbor Discovery for IP version 6
      (IPv6)";
    }

    container arp {
      description "Address resolution protocol";
      reference "STD 37 - An Ethernet Address Resolution Protocol";
    }

    container rstp {
      description "rapid spanning tree protocol";
      reference "IEEE 802.1D-2004";
    }

    container lldp {
      description "link layer discovery protocol";
      reference "IEEE 802.1AB";
    }

    container ptp {
      description
        "precision time protocol for time synchronization services.
        PTP also typically requires per-interface configuration";
      reference "IEEE 1588-2008";
    }
  }

  grouping l2-protocols {
    description "Layer 2 protocol models";

    container layer-2-protocols {
      description "layer 2 protocols and features";

      uses l2-protocol-members;

    }

  }

  grouping igp-protocol-members {
    description "containers for IGPs";

    container is-is {
      description "IS-IS IGP routing protocol";
      reference "RFC 1195 - Use of OSI IS-IS for Routing in TCP/IP
      and Dual Environments";
    }

    container ospf {
      description "OSPF IGP routing protocols";

      container ospf2 {
        description "OSPF v2";
        reference "RFC 2328 - OSPF Version 2";
      }

      container ospf3 {
        description "OSPF v3";
        reference "RFC 5340 - OSPF for IPv6";
      }
    }

    container igp-common {
      description "Common parameters for IGP protocols";
    }
  }

  grouping l3-protocol-members-vrf {
    description "containers for layer 3 protocol that are supported
    in a VRF instance";

    container bgp {
      description "BGP 4";
      reference "RFC 4271 - A Border Gateway Protocol 4 (BGP-4)";
    }

    container igp {
      description "interior gateway protocols";

      uses igp-protocol-members;
    }

    container bfd {
      description "bidirectional forwarding detection";
      reference "RFC 5880 - Bidirectional Forwarding Detection
      (BFD)";
    }

    container pim {
      description "protocol independent multicast";
      reference "RFC 4601 - Protocol Independent Multicast -
      Sparse Mode (PIM-SM): Protocol Specification (Revised)";
    }

    container igmp {
      description "Internet group management protocol";
      reference "RFC 3376 - Internet Group Management Protocol,
      Version 3";
    }

    container static-routes {
      description "static route that are manually created";
    }

  }

  grouping l3-protocols-misc {
    description "containers for other features operating at the
    network layer";

  }

  grouping l3-protocols-mpls {
    description "models related to MPLS and TE";

    container mpls-te {
      description "MPLS and traffic engineering";

      container global {
        description "global MPLS configuration";
      }

      container signaling {
        description "MPLS signaling protocols";

        container rsvp {
          description "RSVP signaling";
          reference "RFC 3209 - RSVP-TE: Extensions to RSVP for LSP
          Tunnels";
        }

        container segment-routing {
          description "SR signaling";
          reference "Segment Routing Architecture -
          draft-filsfils-spring-segment-routing-04";
        }

        container ldp {
          description "label distribution protocol";
          reference "RFC 5036 - LDP Specification";
        }
      }

      container label-switched-paths {
        description "models for different types of LSPs";

        container constrained-path {
          description "traffic-engineered, or constrained path LSPs";
        }

        container igp-congruent {
          description "LSPs that follow the IGP-computed path";
        }

        container static {
          description "statically configured LSPs";
        }
      }
    }
  }

  grouping l3-protocol-members {
    description "containers for all layer 3 protocols";

    uses l3-protocol-members-vrf;
    uses l3-protocols-misc;
    uses l3-protocols-mpls;

  }

  grouping common-policy-objects {
      description
        "Generic policy objects that can be reused at
         arbitrary attachment points. For example,
         prefixes";
    container common-policy-objects {
      description
          "Generic policy objects";
    }
  }

  grouping vrf-policy {
    description
        "Virtual Frowarding and Route (VRF) policies
         such as route destinguisher and route targets";
    reference
        "RFC 4364 - BGP/MPLS Virtual Private Networks (VPNs)";
    container vrf-policy {
        description "VRF Policy";
    }
  }

  grouping control-plane-protocols {
    description "control protocol models";

    container control-plane-protocols {
      description "Control plane protocols and features";
      
      container bgp {
          description "BGP-4 orotocol configuration";
          reference "RFC 4271 - A Border Gateway Protocol 4 (BGP-4)";
          container bgp-policy {
              description "Policy specific to BGP";
          }
      }
      container is-is {
          description "ISO IS-IS protocol configuration";
          reference "RFC 1195 - Use of OSI IS-IS for Routing in
                     TCP/IP and Dual Environments";
          container isis-policy {
              description "Policy specific to IS-IS";
          }
      }
      container ospf {
          description "Open Shortest Path First (OSPF) protocol
                       configuration";
          reference "RFC 2328 - OSPFv2 Protocol
                     RFC 5340 - OSPF for IPv6";
          container ospf-policy {
              description "Policy specific to OSPF";
          }
      }
      container rsvp {
          description "Resource Reservation Protocol (RSVP)
                       protocol configuration";
          reference "RFC 2205 - Resource ReSerVation Protocol (RSVP)
                     RFC 3209 - RSVP-TE: Extensions to RSVP for LSP
                     Tunnels";
      }
      container segment-routing {
          description "Segment Routing configuration for networking
                       instance";
          reference "draft-likowski-spring-sr-yang";
      }
      container ldp {
          description "Label Distribution Protocol (LDP) 
                       configuration";
          reference "RFC 5036 - LDP Specification";
      }
      container pim {
          description "Protocol Independent Multicast (PIM)
                       configuration";
          reference "RFC 4601 - Protocol Independent Multicast -
                     Sparse Mode (PIM-SM) Protocol Specification";
      }
      container igmp {
          description "Internet Group Management Protocol
                       configuration";
          reference "RFC 3376 - Internet Group Management Protocol,
                     Version 3";
      }
      container mld {
          description "Multicast Listener Discovery Protocol
                       configuration";
          reference "RFC 3810 - Multicast Listener Discovery
                     Version 2 (MLDv2 for IPv6";
      }
      container static-routes {
          description "Static route configuration";
          reference "draft-ietf-netmod-routing-cfg";
      }
    }
  }
  
  grouping ribs {
    description
      "Routing Information Bases (RIBs) supported by a
       networking-instance";
    container ribs {
        description
            "RIBs supported by a networking-instance";
        list rib {
            key "name";
            min-elements "1";
            description
                "Each entry represents a RIB identified by the 'name'
                key. All routes in a RIB MUST belong to the same
                address family.

                For each routing instance, an implementation SHOULD
                provide one system-controlled default RIB for each
                supported address family.";
            leaf name {
                type string;
                description
                    "The name of the RIB.";
            }
            reference "draft-ietf-netmod-routing-cfg";
        }
    }
  }

  grouping interface-ip-common {
    description
      "interface-specific configuration for IP interfaces, IPv4 and
      IPv6";

    container vrrp {
      description "virtual router redundancy protocol";
      reference "RFC 5798 - Virtual Router Redundancy Protocol
      (VRRP) Version 3 for IPv4 and IPv6";
    }
  }

  grouping interface-addr-families {
    description
      "containers for addr family-specific data attached
      to interfaces";

    container ipv4 {
      description "IPv4 interfaces";

      uses interface-ip-common;
    }

    container ipv6 {
      description "IPv6 interfaces";

      uses interface-ip-common;
    }
  }

  grouping interfaces {
    description "interface-related models";

    container interfaces {
      description "various interface models";

      container ethernet {
        description "Ethernet interface config, e.g., 10, 40,
        100GBE";

        container aggregates {
          description "LAGs, LACP, etc. for Ethernet interfaces";
          reference "IEEE 802.1ad, 802.1AX";
        }

        container vlans {
          description "VLANs, 802.1q, q-in-q, etc.";
          reference "IEEE 802.1Q";
        }

        container lfm {
          description
            "Link-layer fault management for Ethernet interfaces";
          reference "IEEE 802.3ah";
        }
      }

      container sonet-sdh {
        description "SONET/SDH interfaces";
        reference
          "SDH: ITU standards G.707, G.783, G.784, and G.803
          SONET: ANSI standard T1.105";

      }

      container addressing {
        description "addressing and other interface-specific data,
        e.g., data plane protocols";

        uses interface-addr-families;
      }

      container tunnels {
        description
          "logical tunnel interfaces incl. GRE, VxLAN, L2TP etc.";
      }

    }
  }

  grouping oam {
    description "containers for features related to operations,
    administration, and management";

    container oam {
      description "commonly use OAM functions on devices";

      container snmp {
        description "SNMP server information, e.g., allowed clients";
      }

    }
  }

  grouping system-services {
    description "containers for system service models";

    uses oam;
  }

  grouping system-aaa {
    description "AAA-related services";

    container aaa {
      description "authentication, authorization, and accounting";

      container radius {
        description "RADIUS";
        reference "RFC 2865 - Remote Authentication Dial In User
        Service (RADIUS)";
      }
    }
  }

  grouping system-management {
    description "System management for device or logical network
                 element";
    container system-management {
      description "System management - logical device management with
                  reuse of RFC 7317";
    }
    container syslog {
        description "Syslog configuration";
    }
    container dns {
        description "Domain Name Service (DNA) and resolver
                     configuration";
    }
    container ntp {
          description "network time protocol configuration";
    }
    container statistics-collection {
        description
            "Mechanisms for data collection from devices, including
             packet and flow-level sampling";
    }
    container ssh {
        description "SSH server configuration";
    }
    container tacacs {
        description "TACACS+ configuration";
    }
    container snmp {
        description "System Network Management Protocol (SNMP)
                     configuration";
    }
  }

  grouping ietf-acl {
      description "Packet Access Control Lists (ACLs) as specified in
                   draft-ietf-netmod-acl-model";
      container ietf-acl {
          description "ACLs and packet forwarding rules";
      }
  }

  grouping ietf-key-chain {
      description "Key chains as specified in
                   draft-acee-rtgwg-yang-key-chain;";
      container ietf-key-chain {
          description "Key chains";
      }
  }

  grouping qos {
    description "QoS features";

    container qos {
      description "QoS, including policing, shaping, etc.";
    }
  }

  // data definition statements

  container device {
    description "Top-level anchor point for models. Device is a
                 generic L2/L3 network element";
    uses info;
    uses hardware;
    uses interfaces;
    uses qos;
    container logical-network-elements {
      description "Network devices may support multiple logical
      network instances";

      list logical-network-element {
        key network-element-id;
        description "List of logical network elements";
        leaf network-element-id {
          type uint8; // expect a small number of logical routers
          description "Identifier of the logical network element";
        }
        leaf network-element-name {
          type string;
          description "Descriptive name for the logical network
                       element";
        }
        leaf device-view {
            type boolean;
            default "true";
            description "Flag indicating whether or not the logical
                         network element is able to view and manage
                         the entire device";
        }
        leaf default-networking-instance-name {
          type string;
          description "Specification of the networking instance to
                       use for management connectivity";
        }
        uses system-management;
        uses ietf-acl;
        uses ietf-key-chain;
        container networking-instances {
            description "Networking instances each of which have
                         an independent IP/IPv6 addressing space
                         and protocol instantiations. For layer 3,
                         this consistent with the routing-instance
                         definition in ietf-routing";
            reference "draft-ietf-netmod-routing-cfg";
            list networking-instance {
                key networking-instance-name;
                description "List of networking-instances";
                leaf networking-instance-name {
                    type string;
                    description "Identifier for networking instance";
                }
                leaf type {
                    type identityref {
                        base networking-instance;
                    }
                    description
                        "The routing instance type.";
                }
                leaf enabled {
                    type boolean;
                    default "true";
                    description
                      "Flag indicating whether or not the networking
                       instance is enabled.";
                }
                uses router-id {
                    description
                        "Router ID for networking instances";
                }
                leaf description {
                    type string;
                    description
                      "Description of the networking instance
                      and its intended purpose";
                }
                // Note that there is no list of interfaces within
                // the neworking-instance
                uses oam-protocols;
                uses common-policy-objects;
                uses vrf-policy;
                uses control-plane-protocols;
                uses ribs;
            }
        }
      }
    }

  }

  // augment statements

  // rpc statements

  // notification statements

}
